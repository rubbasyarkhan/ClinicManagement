@model ClinicManagement.Models.Product

@{
    ViewData["Title"] = "Product Details";
    Layout = "~/Views/Shared/AdminLayout.cshtml";
}

<h1 class="mb-4">Product Details</h1>

<div class="card shadow-sm p-4">
    <h4 class="mb-3">Product Information</h4>
    <hr />
    <dl class="row">
        <dt class="col-sm-3">@Html.DisplayNameFor(model => model.Name)</dt>
        <dd class="col-sm-9">@Html.DisplayFor(model => model.Name)</dd>

        <dt class="col-sm-3">@Html.DisplayNameFor(model => model.Description)</dt>
        <dd class="col-sm-9">@Html.DisplayFor(model => model.Description)</dd>

        <dt class="col-sm-3">@Html.DisplayNameFor(model => model.Price)</dt>
        <dd class="col-sm-9">$@Html.DisplayFor(model => model.Price)</dd>

        <dt class="col-sm-3">@Html.DisplayNameFor(model => model.StockQuantity)</dt>
        <dd class="col-sm-9">@Html.DisplayFor(model => model.StockQuantity) units available</dd>

        <dt class="col-sm-3">@Html.DisplayNameFor(model => model.Manufacturer)</dt>
        <dd class="col-sm-9">@Html.DisplayFor(model => model.Manufacturer)</dd>

        <dt class="col-sm-3">Product Image</dt>
        <dd class="col-sm-9">
            @if (!string.IsNullOrEmpty(Model.ImageUrl))
            {
                <img src="@Model.ImageUrl" alt="Product Image" class="img-fluid img-thumbnail" width="200" height="200" />
            }
            else
            {
                <span class="text-muted">No Image Available</span>
            }
        </dd>

        <dt class="col-sm-3">@Html.DisplayNameFor(model => model.Category)</dt>
        <dd class="col-sm-9">
            @(Model.Category != null ? Model.Category.CategoryName : "Uncategorized")
        </dd>
    </dl>
</div>

<!-- Feedback Section -->
<div class="card shadow-sm mt-4 p-4">
    <h3 class="mb-3">Customer Feedback</h3>

    <!-- Feedback Form -->
    <h4>Add Your Feedback</h4>
    <form id="feedback-form">
        <input type="hidden" id="ProductId" value="@Model.ProductId" />

        <div class="mb-3">
            <label for="Comment" class="form-label">Your Review</label>
            <textarea id="Comment" class="form-control" required></textarea>
        </div>

        <!-- Star Rating System -->
        <div class="mb-3">
            <label class="form-label">Rating</label>
            <div id="star-rating">
                <i class="fas fa-star" data-value="1"></i>
                <i class="fas fa-star" data-value="2"></i>
                <i class="fas fa-star" data-value="3"></i>
                <i class="fas fa-star" data-value="4"></i>
                <i class="fas fa-star" data-value="5"></i>
            </div>
            <input type="hidden" id="Rating" value="5" />
        </div>

        <button type="submit" class="btn btn-primary">Submit Feedback</button>
    </form>

    <!-- Display Feedback List -->
    <div id="feedback-list" class="mt-4">
        @if (Model.Feedbacks.Any())
        {
            <ul class="list-group">
                @foreach (var feedback in Model.Feedbacks)
                {
                    <li class="list-group-item">
                        <strong>@feedback.User.FullName:</strong> @feedback.Comment <br />
                        <small class="text-muted">
                            Rating: @feedback.Rating/5 -
                            @(feedback.CreatedAt?.ToShortDateString() ?? "No Date")
                            <span class="text-warning"> @Html.Raw(GetStars(feedback.Rating))</span>
                        </small>
                    </li>
                }
            </ul>
        }
        else
        {
            <p class="text-muted">No feedback yet. Be the first to review this product!</p>
        }
    </div>
</div>

<!-- Action Buttons -->
<div class="mt-4">
    <a asp-action="Edit" asp-route-id="@Model?.ProductId" class="btn btn-warning">Edit</a>
    <a asp-action="Index" class="btn btn-secondary">Back to List</a>
</div>

<!-- JavaScript for Star Rating -->
<script>
    document.addEventListener("DOMContentLoaded", function () {
        const stars = document.querySelectorAll("#star-rating i");
        let selectedRating = 5; // Default rating

        stars.forEach(star => {
            star.addEventListener("mouseover", function () {
                resetStars();
                highlightStars(this.dataset.value);
            });

            star.addEventListener("click", function () {
                selectedRating = this.dataset.value;
                document.getElementById("Rating").value = selectedRating;
            });

            star.addEventListener("mouseleave", function () {
                resetStars();
                highlightStars(selectedRating);
            });
        });

        function highlightStars(count) {
            for (let i = 0; i < count; i++) {
                stars[i].classList.add("text-warning");
            }
        }

        function resetStars() {
            stars.forEach(star => star.classList.remove("text-warning"));
        }
    });

</script>

<!-- Helper Function in C# -->
@functions {
    public string GetStars(int rating)
    {
        return new string('★', rating) + new string('☆', 5 - rating);
    }
}
